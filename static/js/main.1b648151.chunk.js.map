{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Container/Container.module.css","components/Container/Container.js","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","Typography","variant","gutterBottom","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handelSubmit","preventDefault","props","formSubmitHandler","reset","this","form","onSubmit","htmlFor","TextField","label","type","onChange","btnBox","Button","color","Component","ContactList","contacts","onDeleteContact","List","map","id","ListItem","onClick","Filter","filter","App","handleSubmit","validationError","validateContact","displayError","prevState","concat","uuidv4","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","find","deleteContact","contactId","error","alert","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b648151.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnBox\":\"ContactForm_btnBox__2JMAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1RRgM\"};","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n    return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Section({ title, children }) {\r\n    return (\r\n        <div>\r\n            {title && (\r\n                <Typography variant=\"h2\" gutterBottom>\r\n                    {title}\r\n                </Typography>\r\n            )}\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node,\r\n};\r\n","import Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nimport { Component } from 'react';\r\n\r\nexport default class ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handelSubmit = e => {\r\n        const { name, number } = this.state;\r\n\r\n        e.preventDefault();\r\n\r\n        this.props.formSubmitHandler(name, number);\r\n        this.reset();\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' });\r\n    };\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n            <form className={s.form} onSubmit={this.handelSubmit}>\r\n                <label htmlFor=\"\">\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        Name\r\n                    </Typography>\r\n                    <TextField\r\n                        label=\"Enter name\"\r\n                        variant=\"outlined\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </label>\r\n                <label htmlFor=\"\">\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        Number\r\n                    </Typography>\r\n                    <TextField\r\n                        label=\"Enter number\"\r\n                        variant=\"outlined\"\r\n                        type=\"text\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </label>\r\n                <div className={s.btnBox}>\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Add contacts\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        }),\r\n    ),\r\n};\r\n","import PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function ContactList({ contacts, onDeleteContact }) {\n    return (\n        <List>\n            {contacts.map(({ id, name, number }) => (\n                <ListItem key={id}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {name}: {number}\n                    </Typography>\n\n                    <Button\n                        type=\"button\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => {\n                            onDeleteContact(id);\n                        }}\n                    >\n                        Delete\n                    </Button>\n                </ListItem>\n            ))}\n        </List>\n    );\n}\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n            id: PropTypes.string.isRequired,\n        }),\n    ),\n};\n","import PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default function Filter({ filter, onChange }) {\r\n    return (\r\n        <label>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Find contacts by name\r\n            </Typography>\r\n            <TextField\r\n                label=\"Enter name\"\r\n                variant=\"outlined\"\r\n                type=\"text\"\r\n                value={filter}\r\n                onChange={onChange}\r\n            />\r\n        </label>\r\n    );\r\n}\r\n\r\nFilter.propTypes = {\r\n    filter: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n","import { v4 as uuidv4 } from 'uuid';\nimport './App.css';\nimport { Component } from 'react';\nimport Container from './components/Container/Container';\nimport Section from './components/Section/Section';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n    state = {\n        contacts: [\n            { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n            { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n            { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n        ],\n        filter: '',\n    };\n\n    handleSubmit = (name, number) => {\n        const validationError = this.validateContact(name, number);\n        if (validationError) {\n            this.displayError(validationError);\n        } else {\n            this.setState(prevState => ({\n                contacts: prevState.contacts.concat({\n                    name,\n                    number,\n                    id: uuidv4(),\n                }),\n            }));\n        }\n    };\n\n    changeFilter = e => {\n        this.setState({ filter: e.currentTarget.value });\n    };\n\n    getVisibleContacts = () => {\n        const normalizedFilter = this.state.filter.toLowerCase();\n        return this.state.contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedFilter),\n        );\n    };\n\n    validateContact = (name, number) => {\n        if (name === '' || number === '') {\n            return 'Please add contact';\n        }\n\n        const { contacts } = this.state;\n        const existingContact = contacts.find(contact => contact.name === name);\n        if (existingContact) {\n            return `${name} is already in contacts!`;\n        }\n    };\n\n    displayError(error) {\n        alert(error);\n    }\n\n    deleteContact = contactId => {\n        this.setState(prevState => ({\n            contacts: prevState.contacts.filter(\n                contact => contact.id !== contactId,\n            ),\n        }));\n    };\n    render() {\n        const { filter } = this.state;\n\n        const visibleContacts = this.getVisibleContacts();\n\n        return (\n            <Container>\n                <Section title=\"Phonebook\">\n                    <ContactForm formSubmitHandler={this.handleSubmit} />\n                </Section>\n                <Section title=\"Contacts\">\n                    <Filter value={filter} onChange={this.changeFilter} />\n                    <ContactList\n                        contacts={visibleContacts}\n                        onDeleteContact={this.deleteContact}\n                    />\n                </Section>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'fontsource-roboto';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}