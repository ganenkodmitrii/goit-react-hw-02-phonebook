{"version":3,"sources":["App.js","index.js"],"names":["App","state","contacts","id","name","number","filter","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","prevState","concat","uuidv4","reset","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","this","onSubmit","htmlFor","type","onChange","map","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAmHeA,G,kNA7GXC,MAAQ,CACJC,SAAU,CACN,CAAEC,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEF,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,cAElDD,KAAM,GACNC,OAAQ,GACRC,OAAQ,I,EAMZC,aAAe,SAAAC,GAAM,IAAD,EACQA,EAAEC,cAAlBL,EADQ,EACRA,KAAMM,EADE,EACFA,MACd,EAAKC,SAAL,eAAiBP,EAAOM,K,EAI5BE,aAAe,SAAAJ,GACXA,EAAEK,iBAEF,EAAKF,UAAS,SAAAG,GAAS,MAAK,CACxBZ,SAAUY,EAAUZ,SAASa,OAAO,CAChCX,KAAM,EAAKH,MAAMG,KACjBC,OAAQ,EAAKJ,MAAMI,OACnBF,GAAIa,oBAGZ,EAAKC,S,EAKTA,MAAQ,WACJ,EAAKN,SAAS,CAAEP,KAAM,GAAIC,OAAQ,M,EAGtCa,aAAe,SAAAV,GACX,EAAKG,SAAS,CAAEL,OAAQE,EAAEC,cAAcH,U,EAG5Ca,mBAAqB,WACjB,IAAMC,EAAmB,EAAKnB,MAAMK,OAAOe,cAC3C,OAAO,EAAKpB,MAAMC,SAASI,QAAO,SAAAgB,GAAO,OACrCA,EAAQlB,KAAKiB,cAAcE,SAASH,O,uDAIlC,IAAD,EAC4BI,KAAKvB,MAA9BG,EADH,EACGA,KAAMC,EADT,EACSA,OAAQC,EADjB,EACiBA,OAEEkB,KAAKL,qBAE7B,OACI,uBAAMM,SAAUD,KAAKZ,aAArB,UACI,2CACA,wBAAOc,QAAQ,GAAf,iBAEI,uBACIC,KAAK,OACLvB,KAAK,OACLM,MAAON,EACPwB,SAAUJ,KAAKjB,kBAGvB,wBAAOmB,QAAQ,GAAf,mBAEI,uBACIC,KAAK,OACLvB,KAAK,SACLM,MAAOL,EACPuB,SAAUJ,KAAKjB,kBAIvB,wBAAQoB,KAAK,SAAb,0BAEA,gCACI,0CAEA,0DAEI,uBACIA,KAAK,OACLjB,MAAOJ,EACPsB,SAAUJ,KAAKN,kBAKvB,6BACKM,KAAKvB,MAAMC,SAAS2B,KAAI,gBAAG1B,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACrB,+BACI,8BACKD,EADL,KACaC,KAEb,wBAAQsB,KAAK,SAAb,sBAJKxB,kB,GAhGnB2B,cCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.53bf3529.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport './App.css';\nimport { Component } from 'react';\n// import ContactList from './components/ContactList/ContactList';\n\nclass App extends Component {\n    state = {\n        contacts: [\n            { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n            { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n            { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n        ],\n        name: '',\n        number: '',\n        filter: '',\n    };\n\n    /*\n     * Отвечает за обновление состояния\n     */\n    handleChange = e => {\n        const { name, value } = e.currentTarget;\n        this.setState({ [name]: value });\n    };\n\n    // contacts ,\n    handleSubmit = e => {\n        e.preventDefault();\n        // console.log(this.state);\n        this.setState(prevState => ({\n            contacts: prevState.contacts.concat({\n                name: this.state.name,\n                number: this.state.number,\n                id: uuidv4(),\n            }),\n        }));\n        this.reset();\n        // Проп который передается форме для вызова при сабмите\n        // this.props.onSubmit(this.state.name);\n    };\n\n    reset = () => {\n        this.setState({ name: '', number: '' });\n    };\n\n    changeFilter = e => {\n        this.setState({ filter: e.currentTarget.filter });\n    };\n\n    getVisibleContacts = () => {\n        const normalizedFilter = this.state.filter.toLowerCase();\n        return this.state.contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedFilter),\n        );\n    };\n\n    render() {\n        const { name, number, filter } = this.state;\n\n        const visibleContacts = this.getVisibleContacts();\n\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <h2>Phonebook</h2>\n                <label htmlFor=\"\">\n                    Name\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        value={name}\n                        onChange={this.handleChange}\n                    />\n                </label>\n                <label htmlFor=\"\">\n                    number\n                    <input\n                        type=\"text\"\n                        name=\"number\"\n                        value={number}\n                        onChange={this.handleChange}\n                    />\n                </label>\n\n                <button type=\"submit\">Add contacts</button>\n\n                <div>\n                    <h2>Contacts</h2>\n\n                    <label>\n                        Find contacts by name\n                        <input\n                            type=\"text\"\n                            value={filter}\n                            onChange={this.changeFilter}\n                        />\n                    </label>\n\n                    {/* <ContactList contacts={visibleContacts} /> */}\n                    <ul>\n                        {this.state.contacts.map(({ id, name, number }) => (\n                            <li key={id}>\n                                <p>\n                                    {name}: {number}\n                                </p>\n                                <button type=\"button\">Delete</button>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}